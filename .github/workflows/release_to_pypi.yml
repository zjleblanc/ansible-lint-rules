name: Manual PyPi Release

on:
  workflow_dispatch:
    inputs:
      package_repository:
        description: '"testpypi" or "pypi"'
        required: true
      tag:
        description: v*
        required: true

env:
  PYTHON_VERSION: "3.11"
  TOX_ENV: "py311"

jobs:
  testing:
    name: Test package
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "set up python ${{ env.PYTHON_VERSION }}"
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox pytest setuptools

      - name: run pytest via tox[${{ env.TOX_ENV }}]
        run: |
          rm -rf .tox/${{ env.TOX_ENV }}/.pytest_cache
          tox -e ${{ env.TOX_ENV }}

      - uses: actions/upload-artifact@v2
        with:
          name: package
          path: ".tox/.pkg/dist/"

  release:
    name: Create release
    runs-on: ubuntu-latest
    needs: testing
    steps:
      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag }}
          release_name: ${{ github.event.inputs.tag }}

  publish:
    name: Publish on TestPyPi
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download built artifact
        uses: actions/download-artifact@v2
        with:
          name: package
          path: dist

      - name: Publish on TestPyPi
        if: ${{ github.event.inputs.package_repository == 'testpypi' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - name: Publish on PyPi
        if: ${{ github.event.inputs.package_repository == 'pypi' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
